imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@AdminBundle/Resources/config/services.yml" }
    - { resource: "@FrontBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: vi
    app.path.product_images: /uploads/images/products
    app.path.website_images: /assets/images

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: true
    strict_variables: '%kernel.debug%'
    paths:
        '%kernel.root_dir%/../vendor/javiereguiluz/easyadmin-bundle/Resources/views': easyadmin_template

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Configure the FOSUserBundle
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address:        admin@hashop-local.vn
        sender_name:    Admin

# Configure Easy admin
easy_admin:
    site_name: Sunny flowers Backend
    entities:
        User:
            label: user.label
            class: AppBundle\Entity\User
            edit:
                fields: ['id', 'email']
        Category:
            label: category.label
            class: AppBundle\Entity\Category
            form:
                fields: [{ property: 'name', label: 'category.name'}, 'slug', { property: 'parentId', label: 'category.parent'}, { property: 'description', label: 'category.description'}]
            list:
                fields: ['id', { property: 'name', label: 'category.name'}, { property: 'parentId', label: 'category.parent'}, { property: 'products', label: 'product.label'}]    
            # templates:
            #     field_array: ':easy_admin:field_array.html.twig'
        Product:
            label: product.label
            class: AppBundle\Entity\Product
            form:
                fields: [{ property: 'name', label: 'product.name'}, { property: 'category', type_options: { class: 'AppBundle\Entity\Category' }}, { property: 'description', type: 'textarea', label: 'product.description' }, { property: 'price', label: 'product.price'}, { property: 'specprice', label: 'product.specprice', type: 'text'}, { property: 'images', type: 'collection', type_options: { entry_type: 'FrontBundle\Form\ImageType' }, label: 'product.image'}]
            edit:
                title: 'add.edit.product'
            list:
                fields: ['id', 'images', { property: 'name', label: 'product.name'}, { property: 'price', label: 'product.price'}, { property: 'specprice', label: 'product.specprice', type: 'text'} ]    
        Configuration:
            label: website_config.label
            class: AppBundle\Entity\Configuration
            disabled_actions: ['new', 'search']
            form:
                fields: [{ property: 'wsName', label: 'website_name.label'}, { property: 'wsTitle', label: 'website_title.label'}, { property: 'wsSlogan', label: 'website_slogan.label'}, { property: 'wsLogoFile', type:'vich_image', label: 'website_logo.label'}, { property: 'wsAddress', label: 'website_address.label'}, { property: 'wsPhone', label: 'website_phone.label'}, { property: 'wsCopyright', label: 'website_copyright.label'}]
    design:
        brand_color: '#1ABC9C'
        menu:
            - { entity: 'User', icon: 'user' }
            - { entity: 'Category', icon: 'file-text-o' }
            - { entity: 'Product', icon: 'list' }
            - { entity: 'Configuration', icon: 'cogs' }

# Vich configuration
vich_uploader:
    db_driver: orm
    mappings:
        images:
            uri_prefix:         '%app.path.product_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/products'
            delete_on_update:   true
            delete_on_remove:   true
        ws_logo_image:
            uri_prefix:         '%app.path.website_images%'
            upload_destination: '%kernel.root_dir%/../web/assets/images'
            delete_on_update:   true
            delete_on_remove:   true       

stfalcon_tinymce:
    include_jquery: false
    tinymce_jquery: true
    selector: ".tinymce"
    theme:
        advanced:
            plugins:
                - "media emoticons link textcolor code table template"
            toolbar1: "insertfile undo redo | styleselect | bold italic | underline strikethrough subscript superscript | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link | emoticons | forecolor backcolor table"
            image_advtab: true
